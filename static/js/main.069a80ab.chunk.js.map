{"version":3,"sources":["images/kara-eads-unsplash.jpg","images/charisse-kenion-unsplash.jpg","reducers/index.js","reducers/dessertsReducer.js","reducers/errorReducer.js","reducers/statusReducer.js","reducers/isLoadingReducer.js","reducers/attributionReducer.js","utils/fetchData.js","actions/index.js","api-key.js","thunks/fetchRecipes.js","utils/combineMatchesAndUserRecipes.js","components/RecipeLinkCard/RecipeLinkCard.js","components/UserInstructions/UserIntructions.js","containers/RecipeContainer/RecipeContainer.js","utils/storage.js","containers/RecipeCard/RecipeCard.js","components/Error404/Error404.js","components/Nav/Nav.js","components/Loading/Loading.js","containers/App/App.js","thunks/fetchRecipesAndAttribution.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","rootReducer","combineReducers","desserts","state","arguments","length","undefined","action","type","recipes","map","recipe","id","notes","error","message","status","isLoading","bool","attribution","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","stop","_x","apply","this","toggleLoading","setError","setRecipes","apiKey","fetchRecipes","dispatch","unresolvedRecipes","data","dataWithNotes","concat","objectSpread","t0","Promise","all","combineMatchesAndUserRecipes","matches","userRecipes","uniqueUserRecipes","forEach","userRecipe","found","match","push","toConsumableArray","RecipeLinkCard","props","pathToUse","react_default","createElement","Link","className","to","src","images","hostedLargeUrl","alt","name","totalTime","source","sourceDisplayName","UserInstructions","blankRecipe","NavLink","RecipeContainer","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","getRecipesToDisplay","path","populateUserRecipes","populateRecipesWithoutUsers","userRecipeCards","reduce","acc","RecipeLinkCard_RecipeLinkCard","key","UserIntructions_UserInstructions","inherits","createClass","value","Component","connect","setLocalStorage","JSON","stringify","localStorage","setItem","updateLocalStorage","updatedRecipes","savedRecipes","parse","getItem","find","savedRecipe","removeFromLocalStorage","filter","RecipeCard","componentDidMount","setState","componentWillUnmount","setStatus","handleChange","event","target","handleDelete","_this$props","deleteRecipeNotes","storage","handleSave","_this$props2","updateRecipeNotes","hasOwnProperty","_this$props$recipe","style","onClick","href","sourceRecipeUrl","rel","onChange","placeholder","Redirect","Error404","Nav","totalUserRecipes","Loading","mixingImg","App","calculateTotalUserRecipes","sum","getRecipeRoute","dessert","params","containers_RecipeCard_RecipeCard","Error404_Error404","fetchRecipesAndAttribution","Nav_Nav","Loading_Loading","Switch","Route","exact","render","_ref2","containers_RecipeContainer_RecipeContainer","_ref3","_ref4","component","logo","withRouter","recipesToFetch","Boolean","window","location","hostname","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","provider","es","BrowserRouter","containers_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.069a80ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kara-eads-unsplash.9e8d1d50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charisse-kenion-unsplash.e75f2de6.jpg\";","import { combineReducers } from 'redux';\nimport { dessertsReducer } from './dessertsReducer';\nimport { errorReducer } from './errorReducer';\nimport { statusReducer } from './statusReducer';\nimport { isLoadingReducer } from './isLoadingReducer';\nimport { attributionReducer } from './attributionReducer';\n\nexport const rootReducer = combineReducers({\n  desserts: dessertsReducer,\n  error: errorReducer,\n  status: statusReducer,\n  isLoading: isLoadingReducer,\n  attribution: attributionReducer\n});","export const dessertsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_RECIPES':\n      return action.recipes;\n    case 'UPDATE_RECIPE_NOTES':\n      const updatedRecipes = state.map(recipe => {\n        if (recipe.id === action.id) {\n          recipe.notes = action.notes;\n        }\n        return recipe;\n      });\n      return updatedRecipes;\n    case 'DELETE_RECIPE_NOTES':\n      const recipesWithNoteRemoved = state.map(recipe => {\n        if (recipe.id === action.id) {\n          recipe.notes = '';\n        }\n        return recipe;\n      });\n      return recipesWithNoteRemoved;\n    default:\n      return state;\n  }\n}","export const errorReducer = (state = '', action) => {\n  switch(action.type) {\n    case 'SET_ERROR':\n      return action.message\n    default:\n      return state;\n  }\n}","export const statusReducer = (state = '', action) => {\n  switch(action.type) {\n    case 'SET_STATUS':\n      return action.status;\n    default:\n      return state;\n  }\n}","export const isLoadingReducer = (state = false, action) => {\n  switch(action.type) {\n    case 'TOGGLE_LOADING':\n      return action.bool;\n    default:\n      return state;\n  }\n}","export const attributionReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_ATTRIBUTION':\n      return action.attribution;\n    default:\n      return state;\n  }\n}","export const fetchData = async (url) => {\n  const response = await fetch(url);\n  if(!response.ok) {\n    throw new Error(response.message)\n  } \n   return await response.json();\n}","export const toggleLoading = (bool) => ({\n  type: 'TOGGLE_LOADING',\n  bool\n});\n\nexport const setAttribution = (attribution) => ({\n  type: 'SET_ATTRIBUTION',\n  attribution\n});\n\nexport const setError = (message) => ({\n  type: 'SET_ERROR',\n  message\n});\n\nexport const setRecipes = (recipes) => ({\n  type: 'SET_RECIPES',\n  recipes\n});\n\nexport const updateRecipeNotes = (id, notes) => ({\n  type: 'UPDATE_RECIPE_NOTES',\n  id,\n  notes\n});\n\nexport const deleteRecipeNotes = (id) => ({\n  type: 'DELETE_RECIPE_NOTES',\n  id\n});\n\nexport const setStatus = (status) => ({\n  type: 'SET_STATUS',\n  status\n});","export const apiId = '74e54461';\n\nexport const apiKey = '3f840959fa123eeaed4c974652afd47f';","import { fetchData } from '../utils/fetchData';\nimport { apiId, apiKey } from '../api-key';\nimport { toggleLoading, setError } from '../actions';\n\nexport const fetchRecipes = (recipes) => {\n  return (dispatch) => {\n    dispatch(toggleLoading(true));\n    const unresolvedRecipes = recipes.map(async (recipe) => {\n      try {\n        const url = `https://api.yummly.com/v1/api/recipe/${recipe.id}?_app_id=${apiId}&_app_key=${apiKey}`;\n        const data = await fetchData(url);\n        const notes = recipe.notes || '';\n        const dataWithNotes = {...data, notes }\n        dispatch(toggleLoading(false));\n        return dataWithNotes;\n      } catch(error) {\n        dispatch(setError(error.message));\n      }\n    });\n    return Promise.all(unresolvedRecipes);\n  }\n}\n","export const combineMatchesAndUserRecipes = (matches, userRecipes) => {\n  if (!userRecipes) {\n    return matches\n  }\n  \n  let uniqueUserRecipes = [];\n  userRecipes.forEach(userRecipe => {\n    let found = false;\n    matches.forEach(match => {\n      if (match.id === userRecipe.id) {\n        found = true;\n        match.notes = userRecipe.notes;\n      }\n    });\n\n    if (!found) {\n      uniqueUserRecipes.push(userRecipe);\n    }\n  });\n  return [...matches, ...uniqueUserRecipes];\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const RecipeLinkCard = (props) => {\n  const { recipe } = props;\n  let pathToUse;\n  (recipe.notes === '') ? (pathToUse = '/desserts/') : (pathToUse = '/my-recipes/')\n  return(\n    <Link className='RecipeLinkCard--Link' to={pathToUse + recipe.id}>\n      <div className='RecipeLinkCard--div'>\n        <img className='RecipeLinkCard-img' src={recipe.images[0].hostedLargeUrl} alt={recipe.name}/>\n        <h2>{recipe.name}</h2>\n        <p>Time: {recipe.totalTime}</p>\n        <p>From: {recipe.source.sourceDisplayName}</p>\n      </div>\n    </Link>\n  );\n}\n\nRecipeLinkCard.propTypes = {\n  recipe: PropTypes.object\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport blankRecipe from '../../images/kara-eads-unsplash.jpg';\n\nexport const UserInstructions = () => {\n  return(\n    <div className='UserInstructions--div'>\n      <img className='UserInstructions-img' src={blankRecipe} alt='Empty recipe book and measuring cups'/>\n      <h2>Start saving your recipes today!</h2>\n      <p>Click on a recipe</p>\n      <p>Add your personal baking notes and then save the recipe for future reference</p>\n      <NavLink to='/' >\n        <button className='UserInstructions--button'>Get started</button>\n      </NavLink>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RecipeLinkCard } from '../../components/RecipeLinkCard/RecipeLinkCard';\nimport PropTypes from 'prop-types';\nimport { UserInstructions } from '../../components/UserInstructions/UserIntructions';\n\nexport class RecipeContainer extends Component {\n  getRecipesToDisplay = () => {\n    const { match } = this.props;\n    switch(match.path) {\n      case '/my-recipes':\n        return this.populateUserRecipes();\n      case '/desserts':\n      case '/':\n        return this.populateRecipesWithoutUsers();\n      default:\n        return this.populateRecipesWithoutUsers();\n    }\n  }\n  \n  populateUserRecipes = () => {\n    const { desserts } = this.props;\n    const userRecipeCards =  desserts.reduce((acc, recipe) => {\n      if (recipe.notes !== '') {\n        acc.push(<RecipeLinkCard recipe={recipe} key={recipe.id} />)\n      }\n      return acc;\n    }, []);\n\n    return userRecipeCards.length ? userRecipeCards : (\n      <UserInstructions />\n    );\n  }\n\n  populateRecipesWithoutUsers = () => {\n    const { desserts } = this.props;\n    return desserts.reduce((acc, recipe) => {\n      if (recipe.notes === '') {\n        acc.push(<RecipeLinkCard recipe={recipe} key={recipe.id} />)\n      }\n      return acc;\n    }, []);\n  }\n\n  render() {\n    return(\n      <div className='RecipeContainer'>\n      {this.getRecipesToDisplay()}\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  desserts: state.desserts\n});\n\nexport default connect(mapStateToProps)(RecipeContainer);\n\nRecipeContainer.propTypes = {\n  desserts: PropTypes.array,\n  match: PropTypes.object\n}","export const setLocalStorage = (id, notes) => {\n  const recipes = JSON.stringify([{ id, notes }]);\n  localStorage.setItem('userRecipes', recipes);\n};\n\nexport const updateLocalStorage = (id, notes) => {\n  const savedRecipes = JSON.parse(localStorage.getItem('userRecipes'));\n  const found = savedRecipes.find(savedRecipe => savedRecipe.id === id);\n  let updatedRecipes;\n  if (found) {\n    updatedRecipes = savedRecipes.map(savedRecipe => {\n      if (savedRecipe.id === id) {\n        savedRecipe.notes = notes;\n      }\n      return savedRecipe\n    });\n  } else {\n    updatedRecipes = [...savedRecipes, { id, notes }];\n  }\n  localStorage.setItem('userRecipes', JSON.stringify(updatedRecipes));\n};\n\nexport const removeFromLocalStorage = (id) => {\n  const savedRecipes = JSON.parse(localStorage.getItem('userRecipes'));\n  const updatedRecipes = savedRecipes.filter(recipe => recipe.id !== id);\n  localStorage.setItem('userRecipes', JSON.stringify(updatedRecipes));\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteRecipeNotes, updateRecipeNotes, setStatus } from '../../actions';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as storage from '../../utils/storage';\n\nexport class RecipeCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: ''\n    }\n  }\n\n  componentDidMount = () => {\n    const notes = this.props.recipe.notes;\n    this.setState({ notes });\n  }\n\n  componentWillUnmount = () => {\n    this.props.setStatus('');\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    this.setState({ notes: value });\n  }\n\n  handleDelete = () => {\n    const { deleteRecipeNotes, setStatus, recipe } = this.props;\n    storage.removeFromLocalStorage(recipe.id);\n    deleteRecipeNotes(recipe.id);\n    setStatus('success');\n  }\n\n  handleSave = () => {\n    const { id } = this.props.recipe;\n    const { notes } = this.state;\n    const { setStatus, updateRecipeNotes } = this.props;\n    updateRecipeNotes(id, notes);\n    if (localStorage.hasOwnProperty('userRecipes')) {\n      storage.updateLocalStorage(id, notes);\n    } else {\n      storage.setLocalStorage(id, notes);\n    }\n\n    setStatus('success');\n  }\n\n  render() {\n    const { images, name, source, totalTime } = this.props.recipe;\n    const { match } = this.props;\n    let style = 'RecipeCard--div--button';\n    if (match.path === '/my-recipes/:id') {\n      style = 'RecipeCard--div--buttons';\n    } \n    return (\n      <article className='RecipeCard--article'>\n        <div className={style}>\n          <NavLink to='/'>\n            <button className='RecipeCard--icon--close'><i className='far fa-times-circle'></i></button>\n          </NavLink>\n          {\n            (match.path === '/my-recipes/:id') && \n            <button onClick={this.handleDelete} className='RecipeCard--icon--delete'><i className=\"far fa-trash-alt\"></i></button>\n          }\n        </div>\n        <div className='RecipeCard--div--flex'>\n          <div className='RecipeCard--div'>\n            <a className='RecipeCard--anchor'\n              href={source.sourceRecipeUrl}\n              target='_blank'\n              rel='noopener noreferrer'>\n              <img className='RecipeCard--img' src={images[0].hostedLargeUrl} alt={name} />\n            </a>\n            <p className='RecipeCard--p'>Time: {totalTime}</p>\n            <p className='RecipeCard--p'>From: {source.sourceDisplayName}</p>\n          </div>\n          <div className='RecipeCard--div-notes'>\n            <a className='RecipeCard--anchor' \n              href={source.sourceRecipeUrl} \n              target='_blank' \n              rel='noopener noreferrer'>{name}</a>\n            <p className='RecipeCard--p--large'>My Baking Notes:</p>\n            <textarea \n              className='RecipeCard--textarea' \n              value={this.state.notes} \n              onChange={this.handleChange} \n              placeholder='Save your baking notes and specific oven instructrions'\n            ></textarea>\n            <button onClick={this.handleSave} className='RecipeCard--button'>Save</button>\n          </div>\n\n        </div>\n        { (this.props.status === 'success') && <Redirect to='/'/> }\n      </article>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  status: state.status\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  deleteRecipeNotes: (id) => dispatch(deleteRecipeNotes(id)),\n  updateRecipeNotes: (id, notes) => dispatch(updateRecipeNotes(id, notes)),\n  setStatus: (status) => dispatch(setStatus(status)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeCard);\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.object,\n  match: PropTypes.object,\n  status: PropTypes.string,\n  deleteRecipeNotes: PropTypes.func,\n  updateRecipeNotes: PropTypes.func,\n  setStatus: PropTypes.func,\n}","import React from 'react';\nimport blankRecipe from '../../images/kara-eads-unsplash.jpg';\n\nexport const Error404 = () => {\n  return(\n    <div className='Error404'>\n      <h1>No recipe found</h1>\n      <img className='Error404--img' src={blankRecipe} alt='Empty recipe book and measuring cups'/>\n      <p className='Error404--p--credit'>Photo by Kara Eads on Unsplash</p>\n    </div>\n  );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Nav = (props) => {\n  return(\n    <div className='Nav--div'>\n      <NavLink className='Nav--NavLink--margin' to='/'>Home</NavLink>\n      <NavLink className='Nav--NavLink' to='/my-recipes'>My {props.totalUserRecipes} Recipes</NavLink>\n    </div>\n  );\n}\n\nNav.propTypes = {\n  totalUserRecipes: PropTypes.number\n}","import React from 'react';\nimport mixingImg from '../../images/charisse-kenion-unsplash.jpg';\n\nexport const Loading = () => {\n  return(\n    <div className='Loading'>\n      <h1>Mixing up some great recipes...</h1>\n      <img\n        className='Loading--img' \n        src={mixingImg} \n        alt='chocolate chip cookie dough in a mixing bowl'/>\n      <p className='Loading--p--credit'>Photo by Charisse Kenion on Unsplash</p>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchRecipesAndAttribution } from '../../thunks/fetchRecipesAndAttribution';\nimport RecipeContainer from '../RecipeContainer/RecipeContainer.js';\nimport RecipeCard from '../RecipeCard/RecipeCard.js';\nimport { Error404 } from '../../components/Error404/Error404.js';\nimport { Nav } from '../../components/Nav/Nav.js';\nimport { Loading } from '../../components/Loading/Loading';\n\nexport class App extends Component {\n  calculateTotalUserRecipes = () => {\n    const { desserts } = this.props;\n    const totalUserRecipes = desserts.reduce((sum, recipe) => {\n      return (recipe.notes !== '') ? (sum += 1) : sum;\n    }, 0);\n    return totalUserRecipes;\n  }\n  \n  componentDidMount() {\n    const { fetchRecipesAndAttribution } = this.props;\n    if (localStorage.hasOwnProperty('userRecipes')) {\n      const savedUserRecipes = JSON.parse(localStorage.getItem('userRecipes'));\n      fetchRecipesAndAttribution(savedUserRecipes);\n    } else {\n      fetchRecipesAndAttribution();\n    }\n  }\n\n  getRecipeRoute = ({ match }) => {\n    const { desserts } = this.props;\n    const dessert = desserts.find(dessert => dessert.id === match.params.id);\n    if (!dessert) {\n      return <Error404 />\n    } \n    return <RecipeCard match={match} recipe={dessert} />\n  }\n  \n  render() {\n    const { isLoading, attribution } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"App--header\">\n          <h1 className='App--h1'>Mix It Up</h1>\n          <Nav totalUserRecipes={this.calculateTotalUserRecipes()}/>\n        </header>\n        { isLoading && <Loading />}\n        <Switch>\n          <Route exact path='/desserts' render={({ match }) => <RecipeContainer match={match}/>} />\n          <Route exact path='/my-recipes' render={({ match }) => <RecipeContainer match={match}/>} />\n          <Route path='/my-recipes/:id' render={this.getRecipeRoute} />\n          <Route path='/desserts/:id' render={this.getRecipeRoute} />\n          <Route exact path='/' render={({ match }) => <RecipeContainer match={match}/>}/>\n          <Route component={Error404} />\n        </Switch>\n        <div className='App--div-attribution'>\n          <p>\n            Recipe search powered by\n            <a className='App--div-anchor' href={attribution.url}><img alt='Yummly' src={attribution.logo}/></a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  desserts: state.desserts,\n  error: state.error,\n  isLoading: state.isLoading,\n  attribution: state.attribution\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchRecipesAndAttribution: (recipes) => dispatch(fetchRecipesAndAttribution(recipes)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nApp.propTypes = {\n  desserts: PropTypes.array,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  attribution: PropTypes.object,\n  fetchRecipesAndAttribution: PropTypes.func,\n}","import { fetchData } from '../utils/fetchData';\nimport { toggleLoading, setRecipes, setAttribution, setError } from '../actions';\nimport { apiId, apiKey } from '../api-key';\nimport { fetchRecipes } from './fetchRecipes';\nimport { combineMatchesAndUserRecipes } from '../utils/combineMatchesAndUserRecipes';\n\nexport const fetchRecipesAndAttribution = (userRecipes) => {\n  return async (dispatch) => {\n    try {\n      dispatch(toggleLoading(true));\n      const url = `https://api.yummly.com/v1/api/recipes?_app_id=${apiId}&_app_key=${apiKey}&q=desserts&requirePictures=true&maxResult=30&start=40`;\n      const response = await fetchData(url);\n      const recipesToFetch = await combineMatchesAndUserRecipes(response.matches, userRecipes);\n      const recipes = await dispatch(fetchRecipes(recipesToFetch));\n      dispatch(toggleLoading(false));\n      dispatch(setRecipes(recipes));\n      dispatch(setAttribution(response.attribution));\n    } catch(error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\nimport './styles/main.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(rootReducer, devTools);\nconst provider = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(provider, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}